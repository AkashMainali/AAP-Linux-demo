---
- name: Unregister from Red Hat CDN
  community.general.redhat_subscription:
    state: absent
  ignore_errors: true

- name: Clean subscription manager configuration
  ansible.builtin.shell: subscription-manager clean

- name: Register to Red Hat CDN
  community.general.redhat_subscription:
    state: present
    username: "{{ subscription_username }}"
    password: "{{ subscription_password }}"

- name: Unset RHEL version
  ansible.builtin.shell: subscription-manager release --unset

- name: Ensure system is updated -- Makes system to 7.9
  ansible.builtin.yum:
    name: '*'
    state: latest

- name: Enable rhel-7-server-rpms repository
  shell: subscription-manager repos --enable=rhel-7-server-rpms

- name: Enable rhel-7-server-extras-rpms repository
  shell: subscription-manager repos --enable=rhel-7-server-extras-rpms

- name: Install Leapp packages
  ansible.builtin.yum:
    name: "{{ item }}"
    state: present
  loop:
      - leapp
      - leapp-repository 

- name: Run Leapp preupgrade to RHEL 8
  ansible.builtin.command: leapp preupgrade --target 8.10
  register: preupgrade_result
  ignore_errors: true

- name: Debug the preupgrade_result
  ansible.builtin.debug:
    var: preupgrade_result.stdout_lines

- name: Generate inhibitors_count variable to search for Inhibitors
  ansible.builtin.set_fact:
    inhibitors_count: "{{ preupgrade_result.stdout_lines | regex_search('Inhibitors:\\s+(\\d+)', '\\1') }}"

- name: Check for Inhibitors and run Fix playbook on failed hosts
  block:  
    - name: Fail if Inhibitors not 1
      ansible.builtin.debug:
        msg: "Inhibitors:         {{ inhibitors_count[0] }}"
      failed_when: inhibitors_count[0] | int != 0
  rescue:
    - name: Call the playbook for Leapp Fix
      ansible.builtin.include_tasks: leapp_fix.yml
    #########################################################
    - name: Re-Run the Preupgrade second time
      ansible.builtin.command: leapp preupgrade --target 8.10
      register: preupgrade_result_2
      ignore_errors: true
    #########################################################
    - name: Generate inhibitors_count variable to search for Inhibitors using preupgrade_result_2
      ansible.builtin.set_fact:
        inhibitors_count: "{{ preupgrade_result_2.stdout_lines | regex_search('Inhibitors:\\s+(\\d+)', '\\1') }}"
    #########################################################
    - name: Fail if Inhibitors not 1 after applying Fix
      ansible.builtin.debug:
        msg: "Inhibitors:         {{ inhibitors_count[0] }}"
      failed_when: inhibitors_count[0] | int != 0

