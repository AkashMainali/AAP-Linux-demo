---
#################################
####### Prep the machine ########
#################################

# - name: Unset RHEL version
#   ansible.builtin.shell: subscription-manager release --unset

# - name: Ensure system is updated -- Makes system to 7.9
#   ansible.builtin.yum:
#     name: '*'
#     state: latest

# - name: Install Leapp packages
#   ansible.builtin.yum:
#     name: "{{ item }}"
#     state: present
#     enablerepo: "rhel-7-server-rpms,rhel-7-server-extras-rpms"
#   loop:
#       - leapp
#       - leapp-repository 

- name: Run Leapp preupgrade to RHEL 8
  ansible.builtin.command: leapp preupgrade --target 8.10
  register: preupgrade_result
  ignore_errors: true

- name: Debug the preupgrade_result
  ansible.builtin.debug:
    var: preupgrade_result.stdout_lines

- name: Generate inhibitors_count variable to search for Inhibitors
  ansible.builtin.set_fact:
    inhibitors_count: "{{ preupgrade_result.stdout_lines | regex_search('Inhibitors:\\s+(\\d+)', '\\1') }}"

- name: Check for Inhibitors and run Fix playbook on failed hosts
  block:  
    - name: Fail if Inhibitors not 1
      ansible.builtin.debug:
        msg: "Inhibitors:         {{ inhibitors_count[0] }}"
      failed_when: inhibitors_count[0] | int != 0
  rescue:
    - name: Call the playbook for Leapp Fix
      ansible.builtin.include_tasks: leapp_fix.yml
    - name: Re-Run the Preupgrade
      ansible.builtin.command: leapp preupgrade --target 8.10
      register: preupgrade_result
      ignore_errors: true
    - name: Generate inhibitors_count variable to search for Inhibitors
      ansible.builtin.set_fact:
        inhibitors_count: "{{ preupgrade_result.stdout_lines | regex_search('Inhibitors:\\s+(\\d+)', '\\1') }}"
    - name: Generate report of the preupgrade
      ansible.builtin.include_tasks: leapp_parse_report.yml
    - name: Fail if Inhibitors not 1
      ansible.builtin.debug:
        msg: "Inhibitors:         {{ inhibitors_count[0] }}"
      failed_when: inhibitors_count[0] | int != 0
...