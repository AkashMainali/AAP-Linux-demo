remove all packages from the exclude list
# yum config-manager --save --setopt exclude=''
# cd /lib/modules && ls -d *.el7* --> This gives the old kernal version
# [ -x /usr/sbin/weak-modules ] && /usr/sbin/weak-modules --remove-kernel <version> -- This removes the old kernal
Ignore the following error message, which is generated if the kernel package has been previously removed:
/usr/sbin/weak-modules: line 1081: cd: /lib/modules/<version>/weak-updates: No such file or directory

Remove the old kernel from the boot loader entry. If you have multiple old kernels, repeat this step for each kernel:
# /bin/kernel-install remove <version> /lib/modules/<version>/vmlinuz

Locate remaining RHEL 7 packages:
rpm -qa | grep -e '\.el[67]' | grep -vE '^(gpg-pubkey|libmodulemd|katello-ca-consumer)' | sort

Remove remaining RHEL 7 packages, including old kernel packages, and the kernel-workaround package from your RHEL 8 system. To ensure that RPM dependencies are maintained, use YUM or DNF when performing these actions. Review the transaction before accepting to ensure no packages are unintentionally removed.
yum remove kernel-workaround $(rpm -qa | grep \.el7 | grep -vE 'gpg-pubkey|libmodulemd|katello-ca-consumer`)
yum remove leapp-deps-el8 leapp-repository-deps-el8
rm -r /lib/modules/*el7*
rm -rf /var/log/leapp /root/tmp_leapp_py3 /var/lib/leapp

Disable YUM repositories whose packages cannot be installed or used on RHEL 8. Repositories managed by RHSM are handled automatically. To disable these repositories:
yum config-manager --set-disabled <repository_id>

Remove the existing rescue kernel and initial RAM disk:
rm /boot/vmlinuz-*rescue* /boot/initramfs-*rescue*
Reinstall the rescue kernel and related initial RAM disk:
/usr/lib/kernel/install.d/51-dracut-rescue.install add "$(uname -r)" /boot "/boot/vmlinuz-$(uname -r)"